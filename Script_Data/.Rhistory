c = unname(b)
c
print c
print(c)
print("Calculating Correlation")
fix(a)
getColumnName(shrinjoy,1)
names(shrinjoy)
names(shrinjoy)[2]
}
print("Calculating Spearmans Correlation")
for (i in columns)
{
result = cor.test(shrinjoy[,1],shrinjoy[,i],method="spearman")
rho = unname(result$estimates)
print(names(shrinjoy)[i])
print(rho)
}
fix(result)
rho = unname(result$estimate)
print("Calculating Spearmans Correlation")
for (i in columns)
{
result = cor.test(shrinjoy[,1],shrinjoy[,i],method="spearman")
rho = unname(result$estimate)
print(names(shrinjoy)[i])
print(rho)
}
chisq.test(cbind(shrinjoy[,1],shrinjoy[,2]))
chisq.test(cbind(shrinjoy[,1],shrinjoy[,4]))
chisq.test(rbind(shrinjoy[,1],shrinjoy[,4]))
clear
shrinjoy[,4]
shrinjoy[,5]
View(shrinjoy)
View(shrinjoy)
View(shrinjoy)
View(shrinjoy)
View(shrinjoy)
View(shrinjoy)
View(shrinjoy)
View(shrinjoy)
detach(shrinjoy)
clear
shrinjoy = read.table("/Users/vinodhrajan/Desktop/D.csv",h=T,sep=",")
attach(shrinjoy)
for (i in columns)
{
result = cor.test(shrinjoy[,1],shrinjoy[,i],method="spearman")
rho = unname(result$estimate)
print(names(shrinjoy)[i])
print(rho)
}
clear
columns = seq(4,21)
for (i in columns)
{
result = cor.test(shrinjoy[,1],shrinjoy[,i],method="spearman")
rho = unname(result$estimate)
print(names(shrinjoy)[i])
print(rho)
}
cbind(shrinjoy[,1],shrinjoy[,2])
data.table = cbind(shrinjoy[,1],shrinjoy[,2])
chisq.test(data.table)
data.table = cbind(shrinjoy[,1],shrinjoy[,5])
chisq.test(data.table)
data.table = cbind(shrinjoy[,1],shrinjoy[,2])
data.table
na.omit(data.table)
k = na.omit(data.table)
k
View(k)
View(k)
for (i in columns)
{
#result = cor.test(shrinjoy[,1],shrinjoy[,i],method="spearman")
#rho = unname(result$estimate)
print(names(shrinjoy)[i])
chisq.test(na.omit(cbind(shrinjoy[,1],shrinjoy[,i])))
#print(rho)
}
a = chisq.test(na.omit(cbind(shrinjoy[,1],shrinjoy[,5])))
fix(a)
print(a)
for (i in columns)
{
#result = cor.test(shrinjoy[,1],shrinjoy[,i],method="spearman")
#rho = unname(result$estimate)
print(names(shrinjoy)[i])
print(chisq.test(na.omit(cbind(shrinjoy[,1],shrinjoy[,i]))))
#print(rho)
}
shrinjoy[,7]
subset(shrinjoy[,7], shrinjoy[,7] > 0)
a = chisq.test(na.omit(cbind(shrinjoy[,1],shrinjoy[,5])))
chisq.test(na.omit(cbind(shrinjoy[,1],shrinjoy[,5])))
chisq.test(na.omit(cbind(shrinjoy[,1],shrinjoy[,4])))
chisq.test(na.omit(cbind(shrinjoy[,1],shrinjoy[,7])))
for (i in columns)
{
#result = cor.test(shrinjoy[,1],shrinjoy[,i],method="spearman")
#rho = unname(result$estimate)
print(names(shrinjoy)[i])
print(chisq.test(subset(na.omit(cbind(shrinjoy[,1],shrinjoy[,i])),shrinjoy[,i]>0))
#print(rho)
}
for (i in columns)
{
#result = cor.test(shrinjoy[,1],shrinjoy[,i],method="spearman")
#rho = unname(result$estimate)
print(names(shrinjoy)[i])
print(chisq.test(subset(na.omit(cbind(shrinjoy[,1],shrinjoy[,i])),shrinjoy[,i]>0)))
#print(rho)
}
for (i in columns)
{
#result = cor.test(shrinjoy[,1],shrinjoy[,i],method="spearman")
#rho = unname(result$estimate)
print(names(shrinjoy)[i])
finite = na.omit(cbind(shrinjoy[,1],shrinjoy[,i]))
print(chisq.test(subet(finite,shrinjoy[,i])))
#print(rho)
}
for (i in columns)
{
#result = cor.test(shrinjoy[,1],shrinjoy[,i],method="spearman")
#rho = unname(result$estimate)
print(names(shrinjoy)[i])
finite = na.omit(cbind(shrinjoy[,1],shrinjoy[,i]))
print(chisq.test(subset(finite,shrinjoy[,i])))
#print(rho)
}
}
for (i in columns)
{
#result = cor.test(shrinjoy[,1],shrinjoy[,i],method="spearman")
#rho = unname(result$estimate)
print(names(shrinjoy)[i])
finite = na.omit(cbind(shrinjoy[,1],shrinjoy[,i]))
print(chisq.test(subset(finite,shrinjoy[,i]>0)))
#print(rho)
}
data = cbind(shrinjoy[,1],shrinjoy[,7])
data
subset(data,[,2]>0)
subset(data,data[,2]>0)
subset(data,data[,2]>=0)
for (i in columns)
{
#result = cor.test(shrinjoy[,1],shrinjoy[,i],method="spearman")
#rho = unname(result$estimate)
print(names(shrinjoy)[i])
finite = na.omit(cbind(shrinjoy[,1],shrinjoy[,i]))  # Ignore N/A
finite_noneg = subset(finite,finite[,2] >=0)
print(chisq.test(subset(finite,finite[,2]>0)))
#print(rho)
}
?subset
?wald.test
RSiteSearch("Nagelkerke", restrict="function")
?glm
?glm
?glm
RSiteSearch("Nagelkerke", restrict="function")
install.packages("fmsb")
import fmsb
?fmsb
??fmsb
res <- glm(cbind(ncases,ncontrols) ~ agegp+alcgp+tobgp, data=esoph, family=binomial())
res
summary(res)
fsmb.NagelkerkeR2(res)
library(fmsb)
fsmb.NagelkerkeR2(res)
fsmb.nagelkerkeR2(res)
NagelkerkeR2(res)
NagelkerkeR2(res)$R2
?glm
glm(shrinjoy[,4] ~ shrinjoy[,1], family = binomial)
glm(shrinjoy[,4] ~ shrinjoy[,1])
res = glm(shrinjoy[,4] ~ shrinjoy[,1])
summary(res)
NagelkerkeR2(res)$R2
res = glm(shrinjoy[,1] ~ shrinjoy[,4])
NagelkerkeR2(res)$R2
for (i in columns)
{
#result = cor.test(shrinjoy[,1],shrinjoy[,i],method="spearman")
#rho = unname(result$estimate)
print(names(shrinjoy)[i])
#finite = na.omit(cbind(shrinjoy[,1],shrinjoy[,i]))  # Ignore N/A
#finite_noneg = subset(finite,finite[,2] >=0)
#print(chisq.test(subset(finite,finite[,2]>0)))
#print(rho)
res = glm(formula = shrinjoy[,i] ~ shrinjoy[,1])
NagelkerkeR2(res)$R2
}
for (i in columns)
{
#result = cor.test(shrinjoy[,1],shrinjoy[,i],method="spearman")
#rho = unname(result$estimate)
print(names(shrinjoy)[i])
#finite = na.omit(cbind(shrinjoy[,1],shrinjoy[,i]))  # Ignore N/A
#finite_noneg = subset(finite,finite[,2] >=0)
#print(chisq.test(subset(finite,finite[,2]>0)))
#print(rho)
res = glm(formula = shrinjoy[,i] ~ shrinjoy[,1])
print(NagelkerkeR2(res)$R2)
}
install.packages("aod")
library(aod)
res
wald.test(res)
coef(res)
vcov(res)
res
summary(res)
vcov(res)
clear
res
clear
wald.test(b=coef(res),Sigma=vcov(res))
wald.test(b=coef(res),Sigma=vcov(res))
wald.test(b=coef(res),Sigma=vcov(res),Terms=NULL)
wald.test(b=coef(res),Sigma=vcov(res),L=NULL)
wald.test(vcov(res),coef(res))
wald.test(vcov(res),coef(res),L=NULL)
wald.test(vcov(res),coef(res),L=1)
wald.test(vcov(res),coef(res),L=[1:2])
wald.test(vcov(res),coef(res),L=1:2]
wald.test(vcov(res),coef(res),L=1:1)
wald.test(vcov(res),coef(res),L=1:2)
wald.test(vcov(res),coef(res),Terms=1:2)
wald.test(vcov(res),coef(res),Terms=1:1)
wald.test(vcov(res),coef(res),Terms=2:2)
wald.test(vcov(res),coef(res),Terms=null)
wald.test(vcov(res),coef(res),Terms=NULL)
wald.test(vcov(res),coef(res),Terms=1:1)
wald.test(vcov(res),coef(res),Terms=1:2)
wald.test(vcov(res),coef(res),Terms=2:2)
wald.test(vcov(res),coef(res),Terms=2:1)
res = glm(formula = shrinjoy[,4] ~ shrinjoy[,1])
wald.test(vcov(res),coef(res),Terms=1:1)
wald.test(vcov(res),coef(res),Terms=1:2)
wald.test(vcov(res),coef(res),Terms=2:2)
print(wald.test(vcov(res),coef(res),Terms=2:2))
for (i in columns)
{
#result = cor.test(shrinjoy[,1],shrinjoy[,i],method="spearman")
#rho = unname(result$estimate)
print(names(shrinjoy)[i])
#finite = na.omit(cbind(shrinjoy[,1],shrinjoy[,i]))  # Ignore N/A
#finite_noneg = subset(finite,finite[,2] >=0)
#print(chisq.test(subset(finite,finite[,2]>0)))
#print(rho)
res = glm(formula = shrinjoy[,i] ~ shrinjoy[,1])
print(wald.test(vcov(res),coef(res),Terms=2:2))
#print(NagelkerkeR2(res)$R2)
}
install.packages("stats")
clear
library(stats)
logLik(res)
for (i in columns)
{
#result = cor.test(shrinjoy[,1],shrinjoy[,i],method="spearman")
#rho = unname(result$estimate)
print(names(shrinjoy)[i])
#finite = na.omit(cbind(shrinjoy[,1],shrinjoy[,i]))  # Ignore N/A
#finite_noneg = subset(finite,finite[,2] >=0)
#print(chisq.test(subset(finite,finite[,2]>0)))
#print(rho)
res = glm(formula = shrinjoy[,i] ~ shrinjoy[,1])
#print(wald.test(vcov(res),coef(res),Terms=2:2))
logLik(res)
#print(NagelkerkeR2(res)$R2)
}
for (i in columns)
{
#result = cor.test(shrinjoy[,1],shrinjoy[,i],method="spearman")
#rho = unname(result$estimate)
print(names(shrinjoy)[i])
#finite = na.omit(cbind(shrinjoy[,1],shrinjoy[,i]))  # Ignore N/A
#finite_noneg = subset(finite,finite[,2] >=0)
#print(chisq.test(subset(finite,finite[,2]>0)))
#print(rho)
res = glm(formula = shrinjoy[,i] ~ shrinjoy[,1])
#print(wald.test(vcov(res),coef(res),Terms=2:2))
print(logLik(res))
#print(NagelkerkeR2(res)$R2)
}
lm
?lm
for (i in columns)
{
#result = cor.test(shrinjoy[,1],shrinjoy[,i],method="spearman")
#rho = unname(result$estimate)
print(names(shrinjoy)[i])
#finite = na.omit(cbind(shrinjoy[,1],shrinjoy[,i]))  # Ignore N/A
#finite_noneg = subset(finite,finite[,2] >=0)
#print(chisq.test(subset(finite,finite[,2]>0)))
#print(rho)
res = lm(shrinjoy[,i] ~ shrinjoy[,1])
#print(wald.test(vcov(res),coef(res),Terms=2:2))
print(logLik(res))
#print(NagelkerkeR2(res)$R2)
}
for (i in columns)
{
#result = cor.test(shrinjoy[,1],shrinjoy[,i],method="spearman")
#rho = unname(result$estimate)
print(names(shrinjoy)[i])
#finite = na.omit(cbind(shrinjoy[,1],shrinjoy[,i]))  # Ignore N/A
#finite_noneg = subset(finite,finite[,2] >=0)
#print(chisq.test(subset(finite,finite[,2]>0)))
#print(rho)
res = lm(shrinjoy[,1] ~ shrinjoy[,i])
#print(wald.test(vcov(res),coef(res),Terms=2:2))
print(logLik(res))
#print(NagelkerkeR2(res)$R2)
}
source('~/Desktop/RScripts/scriptNJ.R')
scriptNJ
source('~/Desktop/RScripts/scriptNJ.R')
source('~/Desktop/RScripts/scriptNJ.R')
source('~/Desktop/RScripts/scriptNJ.R')
source('~/Desktop/RScripts/scriptNJ.R')
scriptPerplexity = read.csv("/users/vinodhrajan/dropbox/Script_Data_full/scriptPerp",head=T)
source('~/Desktop/RScripts/perplexity.R')
source('~/Desktop/RScripts/perplexity.R')
source('~/Desktop/RScripts/HandwritingModelBasic.R')
source('~/Desktop/RScripts/perplexity.R')
source('~/Desktop/RScripts/scriptNJ.R')
source('~/Desktop/RScripts/scriptNJ.R')
source('~/Desktop/RScripts/scriptNJ.R')
source('~/Desktop/RScripts/scriptNJ.R')
source('~/Desktop/RScripts/scriptNJ.R')
source('~/Desktop/RScripts/scriptNJ.R')
source('~/Desktop/RScripts/perpVsStroke.R')
source('~/Desktop/RScripts/perpVsStroke.R')
source('~/Desktop/RScripts/perplexity.R')
source('~/Desktop/RScripts/scriptNJ.R')
scriptNj
scriptNJ[1,]
scriptNJ[,]
scriptNJ[,1]
scriptPerplexity]
scriptPerplexity
plot(scriptPerplexity[,1],scriptNJ[,1])
plot(scriptPerplexity[,1],scriptNJ[,1])
plot(scriptPerplexity[,1],scriptNJ[,1])
plot(scriptPerplexity[,1],scriptNJ[,1])
plot(scriptPerplexity[,1],scriptNJ[,1],type=='l')
line(scriptPerplexity[,1],scriptNJ[,1])
line(scriptPerplexity[,1],scriptNJ[,1])
lines(scriptPerplexity[,1],scriptNJ[,1])
plot(scriptPerplexity[,1],scriptNJ[,1],type=='l')
plot(scriptPerplexity[,1],scriptNJ[,1])
scriptPerplexity[,1]
scriptNJ
scriptNJ[1,2]
scriptPerplexity[,1]
scriptNJ[,1]
corr(scriptNJ,scriptPerplexity)
cor(scriptNJ[,1],scriptPerplexity[,1])
cor(scriptNJ[,2],scriptPerplexity[,2])
cor(scriptNJ[,3],scriptPerplexity[,3])
cor(scriptNJ[,4],scriptPerplexity[,4])
cor(scriptNJ[,5],scriptPerplexity[,5])
cor(scriptNJ[,1],scriptPerplexity[,1])
cor(scriptNJ[,1],scriptPerplexity[,1])
cor(scriptNJ[,2],scriptPerplexity[,2])
cor(scriptNJ[,3],scriptPerplexity[,3])
cor(scriptNJ[,4],scriptPerplexity[,4])
1:5
cor(scriptNJ[3:5,4],scriptPerplexity[3:5,4])
cor(scriptNJ[3:5,1],scriptPerplexity[3:5,1])
cor(scriptNJ[2:5,1],scriptPerplexity[2:5,1])
cor(scriptNJ[3:5,1],scriptPerplexity[3:5,1])
cor(scriptNJ[3:5,1],scriptPerplexity[3:6,1])
cor(scriptNJ[3:6,1],scriptPerplexity[3:6,1])
cor(scriptNJ[4:6,1],scriptPerplexity[4:6,1])
scriptNJ
scriptPerplexity
cor(scriptNJ[3:5,4],scriptPerplexity[3:5,4])
cor(scriptNJ[1:6,4],scriptPerplexity[1:6,4])
plot(scriptNJ[1:6,4],scriptPerplexity[1:6,4])
plot(scriptNJ[1:6,3],scriptPerplexity[1:6,3])
plot(scriptNJ[1:6,2],scriptPerplexity[1:6,2])
plot(scriptNJ[1:6,3],scriptPerplexity[1:6,3])
cor(scriptNJ[1:6,3],scriptPerplexity[1:6,3])
plot(scriptNJ[1:6,1],scriptPerplexity[1:6,1])
source('~/Desktop/RScripts/scriptNJ.R')
source('~/Desktop/RScripts/scriptNJ.R')
source('~/Desktop/RScripts/scriptNJ.R')
cor(script[,3],scriptPerplexity[,3])
cor(script[,2],scriptPerplexity[,2])
cor(script[,4],scriptPerplexity[,4])
cor(script[,1],scriptPerplexity[,1])
cor(scriptNJ[,1],scriptPerplexity[,1])
cor(scriptNJ[,4],scriptPerplexity[,4])
cor(script[,1],scriptPerplexity[,1])
cor(script[,2],scriptPerplexity[,2])
cor(script[,3],scriptPerplexity[,3])
cor(script[,4],scriptPerplexity[,4])
cor(script[,4],scriptNJ[,4])
cor(script[,1],scriptNJ[,1])
cor(script[,2],scriptNJ[,2])
cor(script[,3],scriptNJ[,3])
cor(script[,4],scriptNJ[,4])
scriptNJ
lm(script[,1],scriptNJ[,1])
lm(script[,1]~scriptNJ[,1])
summmary(lm(script[,1]~scriptNJ[,1]))
summary(lm(script[,1]~scriptNJ[,1]))
summary(lm(scriptNJ[,1]~scriptPerplexity[,1]))
summary(lm(scriptNJ[,2]~scriptPerplexity[,2]))
summary(lm(scriptNJ[,3]~scriptPerplexity[,3]))
summary(lm(scriptNJ[,4]~scriptPerplexity[,4]))
summary(lm(scriptNJ[,3]~scriptPerplexity[,3]))
cor(scriptNJ[,3]~scriptPerplexity[,3]))
cor(scriptNJ[,3]~scriptPerplexity[,3])
cor(scriptNJ[,3],scriptPerplexity[,3])
cor(scriptNJ[,3],scriptPerplexity[,3])
cor(script[,1]~scriptPerplexity[,1])
cor(script[,1],scriptPerplexity[,1])
cor(script[,2],scriptPerplexity[,2])
cor(script[,3],scriptPerplexity[,2])
cor(script[,3],scriptPerplexity[,3])
cor(script[,4],scriptPerplexity[,4])
scripts
script
scriptNJ
scriptsNJAll = c(scriptNJ[,1],scriptNJ[,2],scriptNJ[,3],scriptNJ[,4])
scritpsNJAll
scritptsNJAll
scriptsNJAll
perpAll = c(scriptPerplexity[,1],scriptPerplexity[,2],scriptPerplexity[,3],scriptPerplexity[,4])
perpAll
plot(scriptsNJAll,perpAll)
cor(scriptsNJAll,perpAll)
summary(lm(scriptsNJAll,perpAll))
summary(lm(scriptsNJAl~,perpAll))
summary(lm(scriptsNJAll~perpAll))
scriptsSAll = c(script[,1],script[,2],script[,3],script[,4])
plot(scriptsSAll,perpAll)
cor(scriptsSAll,perpAll)
plot(scriptsSAll,scriptNJAll)
plot(scriptsSAll,scriptsNJAll)
cor(scriptsSAll,scriptsNJAll)
source('~/Desktop/RScripts/frequency.R')
source('~/Desktop/RScripts/perpVsStroke.R')
source('~/Desktop/RScripts/perpVsStroke.R')
View(shrinjoy)
source('~/Desktop/RScripts/analysis_basic.R')
source('~/Desktop/RScripts/multi-variate.R')
source('~/Desktop/RScripts/pca_change data_prod_geo.R')
source('~/Desktop/RScripts/pca_change data_prod_geo.R')
source('~/Desktop/RScripts/pca_change data_prod_geo.R')
source('~/Desktop/RScripts/pca_change data_prod_geo.R')
source('~/Desktop/RScripts/pca_change data_prod_geo.R')
source('~/Desktop/RScripts/pca_change data_prod_geo.R')
source('~/Desktop/RScripts/pca_change data_prod_geo.R')
i
j
comb(1:4,2)
combn(1:4,2)
source('~/Desktop/RScripts/pca_change data_prod_geo.R')
combn(1:4,2,repeats.allowed=TRUE)
combn(1:4,2,repeats.allowed='TRUE')
combn(1:4,2,repeats='TRUE')
combn(1:4,2,repeats=TRUE)
combn(1:4,2,repeats=T)
summary(GlyphAll.pca.p)
summary(GlyphAll.pca.a)
summary(GlyphAll.pca.a$scores)
GlyphAll.pca.a$loadings
GlyphAll.pca.p$loadings
source('~/Desktop/RScripts/FeatureCorrelation.R')
cor(allB[prod],allB[geo])
cor(allB[prod],allB[prod])
cor(allB[geo],allB[geo])
source('~/Desktop/RScripts/perplexity.R')
source('~/Desktop/RScripts/perplexity.R')
source('~/Desktop/RScripts/scriptNJ.R')
source('~/Desktop/RScripts/perpVsStroke.R')
cor(perpAll,scriptsSAll)
cor(perpAll,scriptsNJAll)
source('~/Desktop/RScripts/frequencyRegression.R')
source('~/Desktop/RScripts/perplexity.R')
source('~/Desktop/RScripts/perplexity.R')
source('~/Desktop/RScripts/scriptNJ.R')
source('~/Desktop/RScripts/frequencyRegression.R')
source('~/Desktop/RScripts/frequencyRegression.R')
source('~/Desktop/RScripts/frequencyRegression.R')
source('~/Desktop/RScripts/frequencyRegression.R')
source('~/Desktop/RScripts/frequencyRegression.R')
source('~/Desktop/RScripts/frequencyRegression.R')
source('~/Desktop/RScripts/frequencyRegression.R')
source('~/Desktop/RScripts/frequencyRegression.R')
source('~/Desktop/RScripts/frequencyRegression.R')
source('~/Desktop/RScripts/FeatureCorrelation.R')
cor(allB[prod],allB[geo])
cor(allB[geo],allB[geo])
cor(allB[prod],allB[geo])
source('~/Desktop/RScripts/FeatureCorrelation.R')
cor(allB[prod],allB[geo])
cor(allB[geo],allB[geo])
cor(allB[prod],allB[prod])
source('~/Desktop/RScripts/perplexity.R')
source('~/Desktop/RScripts/scriptNJ.R')
