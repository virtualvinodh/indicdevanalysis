}
for (i in columns)
{
#result = cor.test(shrinjoy[,1],shrinjoy[,i],method="spearman")
#rho = unname(result$estimate)
print(names(shrinjoy)[i])
print(chisq.test(subset(na.omit(cbind(shrinjoy[,1],shrinjoy[,i])),shrinjoy[,i]>0)))
#print(rho)
}
for (i in columns)
{
#result = cor.test(shrinjoy[,1],shrinjoy[,i],method="spearman")
#rho = unname(result$estimate)
print(names(shrinjoy)[i])
finite = na.omit(cbind(shrinjoy[,1],shrinjoy[,i]))
print(chisq.test(subet(finite,shrinjoy[,i])))
#print(rho)
}
for (i in columns)
{
#result = cor.test(shrinjoy[,1],shrinjoy[,i],method="spearman")
#rho = unname(result$estimate)
print(names(shrinjoy)[i])
finite = na.omit(cbind(shrinjoy[,1],shrinjoy[,i]))
print(chisq.test(subset(finite,shrinjoy[,i])))
#print(rho)
}
}
for (i in columns)
{
#result = cor.test(shrinjoy[,1],shrinjoy[,i],method="spearman")
#rho = unname(result$estimate)
print(names(shrinjoy)[i])
finite = na.omit(cbind(shrinjoy[,1],shrinjoy[,i]))
print(chisq.test(subset(finite,shrinjoy[,i]>0)))
#print(rho)
}
data = cbind(shrinjoy[,1],shrinjoy[,7])
data
subset(data,[,2]>0)
subset(data,data[,2]>0)
subset(data,data[,2]>=0)
for (i in columns)
{
#result = cor.test(shrinjoy[,1],shrinjoy[,i],method="spearman")
#rho = unname(result$estimate)
print(names(shrinjoy)[i])
finite = na.omit(cbind(shrinjoy[,1],shrinjoy[,i]))  # Ignore N/A
finite_noneg = subset(finite,finite[,2] >=0)
print(chisq.test(subset(finite,finite[,2]>0)))
#print(rho)
}
?subset
?wald.test
RSiteSearch("Nagelkerke", restrict="function")
?glm
?glm
?glm
RSiteSearch("Nagelkerke", restrict="function")
install.packages("fmsb")
import fmsb
?fmsb
??fmsb
res <- glm(cbind(ncases,ncontrols) ~ agegp+alcgp+tobgp, data=esoph, family=binomial())
res
summary(res)
fsmb.NagelkerkeR2(res)
library(fmsb)
fsmb.NagelkerkeR2(res)
fsmb.nagelkerkeR2(res)
NagelkerkeR2(res)
NagelkerkeR2(res)$R2
?glm
glm(shrinjoy[,4] ~ shrinjoy[,1], family = binomial)
glm(shrinjoy[,4] ~ shrinjoy[,1])
res = glm(shrinjoy[,4] ~ shrinjoy[,1])
summary(res)
NagelkerkeR2(res)$R2
res = glm(shrinjoy[,1] ~ shrinjoy[,4])
NagelkerkeR2(res)$R2
for (i in columns)
{
#result = cor.test(shrinjoy[,1],shrinjoy[,i],method="spearman")
#rho = unname(result$estimate)
print(names(shrinjoy)[i])
#finite = na.omit(cbind(shrinjoy[,1],shrinjoy[,i]))  # Ignore N/A
#finite_noneg = subset(finite,finite[,2] >=0)
#print(chisq.test(subset(finite,finite[,2]>0)))
#print(rho)
res = glm(formula = shrinjoy[,i] ~ shrinjoy[,1])
NagelkerkeR2(res)$R2
}
for (i in columns)
{
#result = cor.test(shrinjoy[,1],shrinjoy[,i],method="spearman")
#rho = unname(result$estimate)
print(names(shrinjoy)[i])
#finite = na.omit(cbind(shrinjoy[,1],shrinjoy[,i]))  # Ignore N/A
#finite_noneg = subset(finite,finite[,2] >=0)
#print(chisq.test(subset(finite,finite[,2]>0)))
#print(rho)
res = glm(formula = shrinjoy[,i] ~ shrinjoy[,1])
print(NagelkerkeR2(res)$R2)
}
install.packages("aod")
library(aod)
res
wald.test(res)
coef(res)
vcov(res)
res
summary(res)
vcov(res)
clear
res
clear
wald.test(b=coef(res),Sigma=vcov(res))
wald.test(b=coef(res),Sigma=vcov(res))
wald.test(b=coef(res),Sigma=vcov(res),Terms=NULL)
wald.test(b=coef(res),Sigma=vcov(res),L=NULL)
wald.test(vcov(res),coef(res))
wald.test(vcov(res),coef(res),L=NULL)
wald.test(vcov(res),coef(res),L=1)
wald.test(vcov(res),coef(res),L=[1:2])
wald.test(vcov(res),coef(res),L=1:2]
wald.test(vcov(res),coef(res),L=1:1)
wald.test(vcov(res),coef(res),L=1:2)
wald.test(vcov(res),coef(res),Terms=1:2)
wald.test(vcov(res),coef(res),Terms=1:1)
wald.test(vcov(res),coef(res),Terms=2:2)
wald.test(vcov(res),coef(res),Terms=null)
wald.test(vcov(res),coef(res),Terms=NULL)
wald.test(vcov(res),coef(res),Terms=1:1)
wald.test(vcov(res),coef(res),Terms=1:2)
wald.test(vcov(res),coef(res),Terms=2:2)
wald.test(vcov(res),coef(res),Terms=2:1)
res = glm(formula = shrinjoy[,4] ~ shrinjoy[,1])
wald.test(vcov(res),coef(res),Terms=1:1)
wald.test(vcov(res),coef(res),Terms=1:2)
wald.test(vcov(res),coef(res),Terms=2:2)
print(wald.test(vcov(res),coef(res),Terms=2:2))
for (i in columns)
{
#result = cor.test(shrinjoy[,1],shrinjoy[,i],method="spearman")
#rho = unname(result$estimate)
print(names(shrinjoy)[i])
#finite = na.omit(cbind(shrinjoy[,1],shrinjoy[,i]))  # Ignore N/A
#finite_noneg = subset(finite,finite[,2] >=0)
#print(chisq.test(subset(finite,finite[,2]>0)))
#print(rho)
res = glm(formula = shrinjoy[,i] ~ shrinjoy[,1])
print(wald.test(vcov(res),coef(res),Terms=2:2))
#print(NagelkerkeR2(res)$R2)
}
install.packages("stats")
clear
library(stats)
logLik(res)
for (i in columns)
{
#result = cor.test(shrinjoy[,1],shrinjoy[,i],method="spearman")
#rho = unname(result$estimate)
print(names(shrinjoy)[i])
#finite = na.omit(cbind(shrinjoy[,1],shrinjoy[,i]))  # Ignore N/A
#finite_noneg = subset(finite,finite[,2] >=0)
#print(chisq.test(subset(finite,finite[,2]>0)))
#print(rho)
res = glm(formula = shrinjoy[,i] ~ shrinjoy[,1])
#print(wald.test(vcov(res),coef(res),Terms=2:2))
logLik(res)
#print(NagelkerkeR2(res)$R2)
}
for (i in columns)
{
#result = cor.test(shrinjoy[,1],shrinjoy[,i],method="spearman")
#rho = unname(result$estimate)
print(names(shrinjoy)[i])
#finite = na.omit(cbind(shrinjoy[,1],shrinjoy[,i]))  # Ignore N/A
#finite_noneg = subset(finite,finite[,2] >=0)
#print(chisq.test(subset(finite,finite[,2]>0)))
#print(rho)
res = glm(formula = shrinjoy[,i] ~ shrinjoy[,1])
#print(wald.test(vcov(res),coef(res),Terms=2:2))
print(logLik(res))
#print(NagelkerkeR2(res)$R2)
}
lm
?lm
for (i in columns)
{
#result = cor.test(shrinjoy[,1],shrinjoy[,i],method="spearman")
#rho = unname(result$estimate)
print(names(shrinjoy)[i])
#finite = na.omit(cbind(shrinjoy[,1],shrinjoy[,i]))  # Ignore N/A
#finite_noneg = subset(finite,finite[,2] >=0)
#print(chisq.test(subset(finite,finite[,2]>0)))
#print(rho)
res = lm(shrinjoy[,i] ~ shrinjoy[,1])
#print(wald.test(vcov(res),coef(res),Terms=2:2))
print(logLik(res))
#print(NagelkerkeR2(res)$R2)
}
for (i in columns)
{
#result = cor.test(shrinjoy[,1],shrinjoy[,i],method="spearman")
#rho = unname(result$estimate)
print(names(shrinjoy)[i])
#finite = na.omit(cbind(shrinjoy[,1],shrinjoy[,i]))  # Ignore N/A
#finite_noneg = subset(finite,finite[,2] >=0)
#print(chisq.test(subset(finite,finite[,2]>0)))
#print(rho)
res = lm(shrinjoy[,1] ~ shrinjoy[,i])
#print(wald.test(vcov(res),coef(res),Terms=2:2))
print(logLik(res))
#print(NagelkerkeR2(res)$R2)
}
source('~/Desktop/RScripts/scriptNJ.R')
scriptNJ
source('~/Desktop/RScripts/scriptNJ.R')
source('~/Desktop/RScripts/scriptNJ.R')
source('~/Desktop/RScripts/scriptNJ.R')
source('~/Desktop/RScripts/scriptNJ.R')
source('~/Desktop/RScripts/HandwritingModelBasic.R')
source('~/Desktop/RScripts/HandwritingModelBasic.R')
source('~/Desktop/RScripts/HandwritingModelBasic.R')
source('~/Desktop/RScripts/HandwritingModelBasic.R')
setwd("~/Dropbox/Handwriting_Model_Data/T1_T2")
source('~/Desktop/RScripts/HandwritingModelBasic.R')
source('~/Desktop/RScripts/HandwritingModelBasic.R')
source('~/Desktop/RScripts/HandwritingModelBasic.R')
source('~/Desktop/RScripts/HandwritingModelBasic.R')
source('~/Desktop/RScripts/HandwritingModelBasic.R')
source('~/Desktop/RScripts/HandwritingModelBasic.R')
source('~/Desktop/RScripts/HandwritingModelBasic.R')
source('~/Desktop/RScripts/HandwritingModelBasic.R')
source('~/Desktop/RScripts/HandwritingModelBasic.R')
source('~/Desktop/RScripts/HandwritingModelBasic.R')
source('~/Desktop/RScripts/HandwritingModelBasic.R')
source('~/Desktop/RScripts/HandwritingModelBasic.R')
source('~/Desktop/RScripts/HandwritingModelBasic.R')
source('~/Desktop/RScripts/HandwritingModelBasic.R')
source('~/Desktop/RScripts/HandwritingModelBasic.R')
source('~/Desktop/RScripts/HandwritingModelBasic.R')
source('~/Desktop/RScripts/HandwritingModelBasic.R')
source('~/Desktop/RScripts/HandwritingModelBasic.R')
source('~/Desktop/RScripts/HandwritingModelBasic.R')
source('~/Desktop/RScripts/HandwritingModelBasic.R')
source('~/Desktop/RScripts/HandwritingModelBasic.R')
charN
charN(1)
charN[1]
charN[1][1]
charN[1][1][1]
charN[1]
str(charN)
str(charN[1])
k = strsplit(charsN,'.ana')[1]
charN[[1]]
source('~/Desktop/RScripts/HandwritingModelBasic.R')
source('~/Desktop/RScripts/HandwritingModelBasic.R')
View(AI)
View(CA)
source('~/Desktop/RScripts/HandwritingModelBasic.R')
source('~/Desktop/RScripts/HandwritingModelBasic.R')
View(AI)
source('~/Desktop/RScripts/HandwritingModelBasic.R')
View(AI)
source('~/Desktop/RScripts/HandwritingModelBasic.R')
source('~/Desktop/RScripts/HandwritingModelBasic.R')
View(AI)
source('~/Desktop/RScripts/HandwritingModelBasic.R')
View(AI)
assign(charN,read.csv(charsN,h=T,na.strings="N/A",skip=2,sep=""))
source('~/Desktop/RScripts/HandwritingModelBasic.R')
source('~/Desktop/RScripts/HandwritingModelBasic.R')
text
source('~/Desktop/RScripts/HandwritingModelBasic.R')
source('~/Desktop/RScripts/HandwritingModelBasic.R')
View(AI)
source('~/Desktop/RScripts/HandwritingModelBasic.R')
View(AI)
AI
AI[1,:]
AI[1,]
AI[,1]
source('~/Desktop/RScripts/HandwritingModelBasic.R')
clear
AI
AI[,2]
AI[1,]
AI[2,]
AI[1,]
AI[1,5]
AI[1,]
AI[1,;]
AI[1,]
AI[1:2,1]
AI[1:2,2]
AI[1:2,]
AI
AI[2,]
AI[3,]
AI[4,]
AI[5,]
source('~/Desktop/RScripts/HandwritingModelBasic.R')
source('~/Desktop/RScripts/HandwritingModelBasic.R')
source('~/Desktop/RScripts/HandwritingModelBasic.R')
source('~/Desktop/RScripts/HandwritingModelBasic.R')
source('~/Desktop/RScripts/HandwritingModelBasic.R')
View(AI)
source('~/Desktop/RScripts/HandwritingModelBasic.R')
source('~/Desktop/RScripts/HandwritingModelBasic.R')
source('~/Desktop/RScripts/HandwritingModelBasic.R')
View(AI)
source('~/Desktop/RScripts/HandwritingModelBasic.R')
View(AI)
source('~/Desktop/RScripts/HandwritingModelBasic.R')
source('~/Desktop/RScripts/HandwritingModelBasic.R')
View(AI)
parName
source('~/Desktop/RScripts/HandwritingModelBasic.R')
source('~/Desktop/RScripts/HandwritingModelBasic.R')
paste("c","d")
source('~/Desktop/RScripts/HandwritingModelBasic.R')
View(AI)
source('~/Desktop/RScripts/HandwritingModelBasic.R')
rowNS
row.names(AI)<-parName
parName
row.names(AI)
View(AI)
col.names(AI)
col(AI)
AI
header(AI)
names(AI)
names(AI) <- parName
AI
colnames(AI)
AI
AI[1,]
AI[,2]
AI[,1]
AI[,6]
AI[1,]
clc
clc
source('~/Desktop/RScripts/HandwritingModelBasic.R')
source('~/Desktop/RScripts/HandwritingModelBasic.R')
View(AI)
View(AI)
list.dir(path=".")
list.dirs(path-".")
list.dirs(path-".")
list.dirs(path=".")
list.dirs(path="")
source('~/Desktop/RScripts/HandwritingModelBasic.R')
source('~/Desktop/RScripts/HandwritingModelBasic.R')
source('~/Desktop/RScripts/HandwritingModelBasic.R')
source('~/Desktop/RScripts/HandwritingModelBasic.R')
source('~/Desktop/RScripts/HandwritingModelBasic.R')
source('~/Desktop/RScripts/HandwritingModelBasic.R')
source('~/Desktop/RScripts/HandwritingModelBasic.R')
source('~/Desktop/RScripts/HandwritingModelBasic.R')
source('~/Desktop/RScripts/HandwritingModelBasic.R')
source('~/Desktop/RScripts/HandwritingModelBasic.R')
source('~/Desktop/RScripts/HandwritingModelBasic.R')
dirsName
source('~/Desktop/RScripts/HandwritingModelBasic.R')
source('~/Desktop/RScripts/HandwritingModelBasic.R')
source('~/Desktop/RScripts/HandwritingModelBasic.R')
prefN[[1]]
prefN[[1]][-1]
prefN[[1]][]
prefN[[2]][]
prefN[[1]][2]
prefN[[1]][-1]
prefN[[1]][end]
prefN[[1]][1:end]
prefN[[1]][-2]
prefN[[1]][-5]
prefN[[1]][-6]
prefN[[1]][-8]
prefN[[1]][-2]
prefN[[1]][-1]
prefN[[1,1]]
prefN[[1][1]]
prefN[[1][0]]
prefN[[1]
prefN[[1]
prefN[[1]]
prefN[[1]][6]
prefN[[1]][end]
prefN[[1]][1:end]
tail(prefN)
tail(prefN[[1]],1)
source('~/Desktop/RScripts/HandwritingModelBasic.R')
source('~/Desktop/RScripts/HandwritingModelBasic.R')
paste(dirP,"/",prefN,sep="")
source('~/Desktop/RScripts/HandwritingModelBasic.R')
source('~/Desktop/RScripts/HandwritingModelBasic.R')
tail(dirsN[[1]],1)
source('~/Desktop/RScripts/HandwritingModelBasic.R')
dirsN
dirN
dirsName
source('~/Desktop/RScripts/HandwritingModelBasic.R')
list.files(path=dirsN,pattern="*.anaN")
dirsN
list.files(path=dirsN)
source('~/Desktop/RScripts/HandwritingModelBasic.R')
source('~/Desktop/RScripts/HandwritingModelBasic.R')
source('~/Desktop/RScripts/HandwritingModelBasic.R')
dirsN
dem = strsplit(dirsN,'/')
dem
dem[[1]]
tail(dem[[1]],1)
source('~/Desktop/RScripts/HandwritingModelBasic.R')
source('~/Desktop/RScripts/HandwritingModelBasic.R')
source('~/Desktop/RScripts/HandwritingModelBasic.R')
charsN
source('~/Desktop/RScripts/HandwritingModelBasic.R')
source('~/Desktop/RScripts/HandwritingModelBasic.R')
source('~/Desktop/RScripts/HandwritingModelBasic.R')
source('~/Desktop/RScripts/HandwritingModelBasic.R')
source('~/Desktop/RScripts/HandwritingModelBasic.R')
barplot(AI_T1_T2)
AI_T1_T
AI_T1_T2
AI_T1_T2($d)
AI_T1_T2$d
barplot(AI_T1_T2$d)
barplot(CA_T1_T2$d)
table(A1_T1,T2$d, CA_T1_T2$d)
table(AI_T1,T2$d, CA_T1_T2$d)
table(AI_T1_T2$d, CA_T1_T2$d)
barplot(CA_T1_T2$d)
barplot(CA_T1_T2$d)
table(AI_T1_T2$d, CA_T1_T2$d)
barplot(CA_T1_T2$d)
barplot(AI_T1_T2$d)
barplot(KA_T1_T2$d)
barplot(MA_T1_T2$d)
barplot(NA_T1_T2$d)
View(NGA_T1_T2)
barplot(NA_1_T1_T2$d)
barplot(NA_2_T1_T2$d)
barplot(NA_1_T1_T2$d)
barplot(NA_2_T1_T2$d)
barplot(NA_1_T1_T2$d)
barplot(NA_2_T1_T2$d)
source('~/Desktop/RScripts/HandwritingModelBasic.R')
k = c()
k
k=c(k,1)
k=c(k,2)
k
source('~/Desktop/RScripts/HandwritingModelBasic.R')
source('~/Desktop/RScripts/HandwritingModelBasic.R')
source('~/Desktop/RScripts/HandwritingModelBasic.R')
source('~/Desktop/RScripts/HandwritingModelBasic.R')
source('~/Desktop/RScripts/HandwritingModelBasic.R')
source('~/Desktop/RScripts/HandwritingModelBasic.R')
source('~/Desktop/RScripts/HandwritingModelBasic.R')
source('~/Desktop/RScripts/HandwritingModelBasic.R')
charParts
len(charParts)
size(charParts)
length(charParts)
NA_1_T1_T2
NA_2_T1_T2
NA_1
NA_T1
NA_T2
NA_1
NA_T1
NA_1_T1_T2
source('~/Desktop/RScripts/HandwritingModelBasic.R')
KA_1_T1_T2
KA_2_T1_T2
KA_T1
source('~/Desktop/RScripts/HandwritingModelBasic.R')
KA_T1 - KA_1_T1_T2
KA_T1 - KA_2_T1_T2
KA_T2 - KA_1_T1_T2
source('~/Desktop/RScripts/HandwritingModelBasic.R')
source('~/Desktop/RScripts/HandwritingModelBasic.R')
source('~/Desktop/RScripts/HandwritingModelBasic.R')
source('~/Desktop/RScripts/HandwritingModelBasic.R')
AI_T1
AI_T1_T2
AI_2
AI_T2
source('~/Desktop/RScripts/HandwritingModelBasic.R')
source('~/Desktop/RScripts/HandwritingModelBasic.R')
source('~/Desktop/RScripts/HandwritingModelBasic.R')
source('~/Desktop/RScripts/HandwritingModelBasic.R')
source('~/Desktop/RScripts/HandwritingModelBasic.R')
CA_T1
CA_T2
CA_T1_T2
CA_T1_T2
CA_T1_T2
source('~/Desktop/RScripts/HandwritingModelBasic.R')
source('~/Desktop/RScripts/HandwritingModelBasic.R')
source('~/Desktop/RScripts/HandwritingModelBasic.R')
MA_T1_T2
MA_T2
MA_T1
MA_T1_T2
MA_T2
